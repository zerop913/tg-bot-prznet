import asyncio
import logging
from aiogram import Bot
from aiogram.exceptions import TelegramAPIError
from database.db_operations import get_all_users
from keyboards.user_keyboards import confirm_button

async def send_message_to_users(bot: Bot, message_text: str, message_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞"""
    users = await get_all_users()
    sent_count = 0
    failed_count = 0
    
    for user in users:
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            await bot.send_message(
                chat_id=user['user_id'],
                text=f"üì¢ *–í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:*\n\n{message_text}",
                reply_markup=confirm_button(message_id),
                parse_mode="Markdown"
            )
            sent_count += 1
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram API
            await asyncio.sleep(0.1)
        except TelegramAPIError as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['user_id']}: {e}")
            failed_count += 1
    
    return sent_count, failed_count